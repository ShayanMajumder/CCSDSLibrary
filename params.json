{"google":"","tagline":"manipulates SpacePackets","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"CCSDS SpacePacket Library","body":"## Introduction\r\nCCSDS SpacePacket Library is a header-only C++ class library\r\nthat manipulates packets in the CCSDS SpacePacket format.\r\nSecondary Header Part is implemented for JAXA/ISAS missions.\r\n\r\nRelated libraries:\r\n- <a href=\"https://github.com/yuasatakayuki/SpaceWireRMAPLibrary\">SpaceWire RMAP Library</a>\r\n- <a href=\"https://github.com/yuasatakayuki/SMCPLibrary\">SMCP Library</a>\r\n\r\n## Installation and Build\r\nGit repository is hosted on the github.com.\r\nTo install the latest source tree, execute git clone like below.\r\n```\r\ngit clone https://github.com/yuasatakayuki/CCSDSLibrary.git\r\n```\r\n\r\nThe library does not need to be pre-compiled since this consists\r\nonly from header files. Just include CCSDSLibrary/includes/CCSDS.hh\r\nand provide a header search path to your compiler.\r\n\r\nFor example, in a source file,\r\n```\r\n#include \"CCSDS.hh\"\r\n...your source...\r\n```\r\nand compile it with a -I flag,\r\n```\r\ng++ -I/path/to/CCSDSLibrary/includes your_application.cc -o your_application\r\n```\r\n\r\n##Classes\r\nUsers mainly interface with instances of the CCSDSSpacePacket class.\r\nCCSDSSpacePacket internally contains\r\n- Primary Header (the CCSDSSpacePacketPrimaryHeader class)\r\n- Secondary Header (if used; the CCSDSSpacePacketSecondaryHeader class)\r\n- User Data Field (std::vector<uint8_t>)\r\n\r\nSee <a href=\"annotated.html\">Class List</a> for complete API reference.\r\n\r\n##Example Usages\r\n###Packet creation\r\n```c++\r\n\t//constructs an empty instance\r\n\tCCSDSSpacePacket* ccsdsPacket = new CCSDSSpacePacket();\r\n\r\n\t//set APID\r\n\tccsdsPacket->getPrimaryHeader()->setAPID(apid);\r\n\r\n\t//set Packet Type (Telemetry or Command)\r\n\tccsdsPacket->getPrimaryHeader()->\r\n\t\tsetPacketType(CCSDSSpacePacketPacketType::TelemetryPacket);\r\n\r\n\t//set Secondary Header Flag (whether this packet has the Secondary Header part)\r\n\tccsdsPacket->getPrimaryHeader()->\r\n\t\tsetSecondaryHeaderFlag(\r\n\t\t\tCCSDSSpacePacketSecondaryHeaderFlag::Present\r\n\t\t);\r\n\r\n\t//set segmentation information\r\n\tccsdsPacket->getPrimaryHeader()->\r\n\t\tsetSequenceFlag(\r\n\t\t\tCCSDSSpacePacketSequenceFlag::UnsegmentedUserData\r\n\t\t);\r\n\r\n\t//set Category\r\n\tccsdsPacket->getSecondaryHeader()->setCategory(category);\r\n\r\n\t//set secondary header type (whether ADU Channel presence)\r\n\tccsdsPacket->getSecondaryHeader()->\r\n\t\tsetSecondaryHeaderType(\r\n\t\t\tCCSDSSpacePacketSecondaryHeaderType::ADUChannelIsUsed\r\n\t\t);\r\n\r\n\t//set ADU Channel ID\r\n\tccsdsPacket->getSecondaryHeader()->setADUChannelID(0x00);\r\n\r\n\t//set ADU Segmentation Flag (whether ADU is segmented)\r\n\tccsdsPacket->getSecondaryHeader()->\r\n\t\tsetADUSegmentFlag(\r\n\t\t\tCCSDSSpacePacketADUSegmentFlag::UnsegmentedADU\r\n\t\t);\r\n\r\n\t//set counters\r\n\tccsdsPacket->getPrimaryHeader()->setSequenceCount(sequenceCount);\r\n\tccsdsPacket->getSecondaryHeader()->setADUCount(aduCount);\r\n\r\n\t//set absolute time\r\n\tuint8_t time[4];\r\n\tccsdsPacket->getSecondaryHeader()->setTime(time);\r\n\r\n\t//set data\r\n\tccsdsPacket->setUserDataField(smcpByteArray);\r\n\tccsdsPacket->setPacketDataLength();\r\n\r\n\t//get packet as byte array\r\n\tstd::vector<uint8_t> packet = ccsdsPacket->getAsByteVector();\r\n```\r\n\r\n###Packet interpretation\r\n```cpp\r\n\t//constructs an empty instance\r\n\tCCSDSSpacePacket* ccsdsPacket = new CCSDSSpacePacket();\r\n\r\n\t//interpret an input data as a CCSDS SpacePacket\r\n\tccsdsPacket->interpret(data,length);\r\n\r\n\t//check if the packet has Secondary Header\r\n\tif(ccsdsPacket->isSecondaryHeaderPresent()){\r\n\t\t...\r\n\t}\r\n\r\n\t//get APID\r\n\tstd::cout << \r\n\t\tccsdsPacket->getPrimaryHeader()->\r\n\t\t\tgetAPIDAsInteger() << std::endl;\r\n\r\n\t//dump packet content\r\n\tstd::cout << ccsdsPacket->toString() << std::endl;\r\n```\r\n\r\n##Feedback\r\nQuestions, comments, and requests are welcome.\r\nRaise them to\r\n<a href=\"https://github.com/yuasatakayuki/CCSDSLibrary\">\r\nthe CCSDS SpacePacket Library Github site</a>."}